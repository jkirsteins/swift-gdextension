<?xml version="1.0" encoding="UTF-8" ?>
<class name="Label3D" inherits="GeometryInstance3D" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="generate_triangle_mesh" qualifiers="const">
			<return type="TriangleMesh" />
			<description>
			</description>
		</method>
		<method name="get_draw_flag" qualifiers="const">
			<return type="bool" />
			<param index="0" name="flag" type="int" enum="Label3D.DrawFlags" />
			<description>
			</description>
		</method>
		<method name="set_draw_flag">
			<return type="void" />
			<param index="0" name="flag" type="int" enum="Label3D.DrawFlags" />
			<param index="1" name="enabled" type="bool" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="alpha_antialiasing_edge" type="float" setter="set_alpha_antialiasing_edge" getter="get_alpha_antialiasing_edge" default="0.0">
		</member>
		<member name="alpha_antialiasing_mode" type="int" setter="set_alpha_antialiasing" getter="get_alpha_antialiasing" enum="BaseMaterial3D.AlphaAntiAliasing" default="0">
		</member>
		<member name="alpha_cut" type="int" setter="set_alpha_cut_mode" getter="get_alpha_cut_mode" enum="Label3D.AlphaCutMode" default="0">
		</member>
		<member name="alpha_hash_scale" type="float" setter="set_alpha_hash_scale" getter="get_alpha_hash_scale" default="1.0">
		</member>
		<member name="alpha_scissor_threshold" type="float" setter="set_alpha_scissor_threshold" getter="get_alpha_scissor_threshold" default="0.5">
		</member>
		<member name="autowrap_mode" type="int" setter="set_autowrap_mode" getter="get_autowrap_mode" enum="TextServer.AutowrapMode" default="0">
		</member>
		<member name="billboard" type="int" setter="set_billboard_mode" getter="get_billboard_mode" enum="BaseMaterial3D.BillboardMode" default="0">
		</member>
		<member name="cast_shadow" type="int" setter="set_cast_shadows_setting" getter="get_cast_shadows_setting" overrides="GeometryInstance3D" enum="GeometryInstance3D.ShadowCastingSetting" default="0" />
		<member name="double_sided" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="true">
		</member>
		<member name="fixed_size" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="false">
		</member>
		<member name="font" type="Font" setter="set_font" getter="get_font">
		</member>
		<member name="font_size" type="int" setter="set_font_size" getter="get_font_size" default="32">
		</member>
		<member name="gi_mode" type="int" setter="set_gi_mode" getter="get_gi_mode" overrides="GeometryInstance3D" enum="GeometryInstance3D.GIMode" default="0" />
		<member name="horizontal_alignment" type="int" setter="set_horizontal_alignment" getter="get_horizontal_alignment" enum="HorizontalAlignment" default="1">
		</member>
		<member name="language" type="String" setter="set_language" getter="get_language" default="&quot;&quot;">
		</member>
		<member name="line_spacing" type="float" setter="set_line_spacing" getter="get_line_spacing" default="0.0">
		</member>
		<member name="modulate" type="Color" setter="set_modulate" getter="get_modulate" default="Color(1, 1, 1, 1)">
		</member>
		<member name="no_depth_test" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="false">
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset" default="Vector2(0, 0)">
		</member>
		<member name="outline_modulate" type="Color" setter="set_outline_modulate" getter="get_outline_modulate" default="Color(0, 0, 0, 1)">
		</member>
		<member name="outline_render_priority" type="int" setter="set_outline_render_priority" getter="get_outline_render_priority" default="-1">
		</member>
		<member name="outline_size" type="int" setter="set_outline_size" getter="get_outline_size" default="12">
		</member>
		<member name="pixel_size" type="float" setter="set_pixel_size" getter="get_pixel_size" default="0.005">
		</member>
		<member name="render_priority" type="int" setter="set_render_priority" getter="get_render_priority" default="0">
		</member>
		<member name="shaded" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="false">
		</member>
		<member name="structured_text_bidi_override" type="int" setter="set_structured_text_bidi_override" getter="get_structured_text_bidi_override" enum="TextServer.StructuredTextParser" default="0">
		</member>
		<member name="structured_text_bidi_override_options" type="Array" setter="set_structured_text_bidi_override_options" getter="get_structured_text_bidi_override_options" default="[]">
		</member>
		<member name="text" type="String" setter="set_text" getter="get_text" default="&quot;&quot;">
		</member>
		<member name="text_direction" type="int" setter="set_text_direction" getter="get_text_direction" enum="TextServer.Direction" default="0">
		</member>
		<member name="texture_filter" type="int" setter="set_texture_filter" getter="get_texture_filter" enum="BaseMaterial3D.TextureFilter" default="3">
		</member>
		<member name="uppercase" type="bool" setter="set_uppercase" getter="is_uppercase" default="false">
		</member>
		<member name="vertical_alignment" type="int" setter="set_vertical_alignment" getter="get_vertical_alignment" enum="VerticalAlignment" default="1">
		</member>
		<member name="width" type="float" setter="set_width" getter="get_width" default="500.0">
		</member>
	</members>
	<constants>
		<constant name="FLAG_SHADED" value="0" enum="DrawFlags">
		</constant>
		<constant name="FLAG_DOUBLE_SIDED" value="1" enum="DrawFlags">
		</constant>
		<constant name="FLAG_DISABLE_DEPTH_TEST" value="2" enum="DrawFlags">
		</constant>
		<constant name="FLAG_FIXED_SIZE" value="3" enum="DrawFlags">
		</constant>
		<constant name="FLAG_MAX" value="4" enum="DrawFlags">
		</constant>
		<constant name="ALPHA_CUT_DISABLED" value="0" enum="AlphaCutMode">
		</constant>
		<constant name="ALPHA_CUT_DISCARD" value="1" enum="AlphaCutMode">
		</constant>
		<constant name="ALPHA_CUT_OPAQUE_PREPASS" value="2" enum="AlphaCutMode">
		</constant>
		<constant name="ALPHA_CUT_HASH" value="3" enum="AlphaCutMode">
		</constant>
	</constants>
</class>
