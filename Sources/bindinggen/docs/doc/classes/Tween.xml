<?xml version="1.0" encoding="UTF-8" ?>
<class name="Tween" inherits="RefCounted" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="bind_node">
			<return type="Tween" />
			<param index="0" name="node" type="Node" />
			<description>
			</description>
		</method>
		<method name="chain">
			<return type="Tween" />
			<description>
			</description>
		</method>
		<method name="custom_step">
			<return type="bool" />
			<param index="0" name="delta" type="float" />
			<description>
			</description>
		</method>
		<method name="get_total_elapsed_time" qualifiers="const">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="interpolate_value" qualifiers="static">
			<return type="Variant" />
			<param index="0" name="initial_value" type="Variant" />
			<param index="1" name="delta_value" type="Variant" />
			<param index="2" name="elapsed_time" type="float" />
			<param index="3" name="duration" type="float" />
			<param index="4" name="trans_type" type="int" enum="Tween.TransitionType" />
			<param index="5" name="ease_type" type="int" enum="Tween.EaseType" />
			<description>
			</description>
		</method>
		<method name="is_running">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_valid">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="kill">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="parallel">
			<return type="Tween" />
			<description>
			</description>
		</method>
		<method name="pause">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="play">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="set_ease">
			<return type="Tween" />
			<param index="0" name="ease" type="int" enum="Tween.EaseType" />
			<description>
			</description>
		</method>
		<method name="set_loops">
			<return type="Tween" />
			<param index="0" name="loops" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="set_parallel">
			<return type="Tween" />
			<param index="0" name="parallel" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="set_pause_mode">
			<return type="Tween" />
			<param index="0" name="mode" type="int" enum="Tween.TweenPauseMode" />
			<description>
			</description>
		</method>
		<method name="set_process_mode">
			<return type="Tween" />
			<param index="0" name="mode" type="int" enum="Tween.TweenProcessMode" />
			<description>
			</description>
		</method>
		<method name="set_speed_scale">
			<return type="Tween" />
			<param index="0" name="speed" type="float" />
			<description>
			</description>
		</method>
		<method name="set_trans">
			<return type="Tween" />
			<param index="0" name="trans" type="int" enum="Tween.TransitionType" />
			<description>
			</description>
		</method>
		<method name="stop">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="tween_callback">
			<return type="CallbackTweener" />
			<param index="0" name="callback" type="Callable" />
			<description>
			</description>
		</method>
		<method name="tween_interval">
			<return type="IntervalTweener" />
			<param index="0" name="time" type="float" />
			<description>
			</description>
		</method>
		<method name="tween_method">
			<return type="MethodTweener" />
			<param index="0" name="method" type="Callable" />
			<param index="1" name="from" type="Variant" />
			<param index="2" name="to" type="Variant" />
			<param index="3" name="duration" type="float" />
			<description>
			</description>
		</method>
		<method name="tween_property">
			<return type="PropertyTweener" />
			<param index="0" name="object" type="Object" />
			<param index="1" name="property" type="NodePath" />
			<param index="2" name="final_val" type="Variant" />
			<param index="3" name="duration" type="float" />
			<description>
			</description>
		</method>
	</methods>
	<signals>
		<signal name="finished">
			<description>
			</description>
		</signal>
		<signal name="loop_finished">
			<param index="0" name="loop_count" type="int" />
			<description>
			</description>
		</signal>
		<signal name="step_finished">
			<param index="0" name="idx" type="int" />
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="TWEEN_PROCESS_PHYSICS" value="0" enum="TweenProcessMode">
		</constant>
		<constant name="TWEEN_PROCESS_IDLE" value="1" enum="TweenProcessMode">
		</constant>
		<constant name="TWEEN_PAUSE_BOUND" value="0" enum="TweenPauseMode">
		</constant>
		<constant name="TWEEN_PAUSE_STOP" value="1" enum="TweenPauseMode">
		</constant>
		<constant name="TWEEN_PAUSE_PROCESS" value="2" enum="TweenPauseMode">
		</constant>
		<constant name="TRANS_LINEAR" value="0" enum="TransitionType">
		</constant>
		<constant name="TRANS_SINE" value="1" enum="TransitionType">
		</constant>
		<constant name="TRANS_QUINT" value="2" enum="TransitionType">
		</constant>
		<constant name="TRANS_QUART" value="3" enum="TransitionType">
		</constant>
		<constant name="TRANS_QUAD" value="4" enum="TransitionType">
		</constant>
		<constant name="TRANS_EXPO" value="5" enum="TransitionType">
		</constant>
		<constant name="TRANS_ELASTIC" value="6" enum="TransitionType">
		</constant>
		<constant name="TRANS_CUBIC" value="7" enum="TransitionType">
		</constant>
		<constant name="TRANS_CIRC" value="8" enum="TransitionType">
		</constant>
		<constant name="TRANS_BOUNCE" value="9" enum="TransitionType">
		</constant>
		<constant name="TRANS_BACK" value="10" enum="TransitionType">
		</constant>
		<constant name="EASE_IN" value="0" enum="EaseType">
		</constant>
		<constant name="EASE_OUT" value="1" enum="EaseType">
		</constant>
		<constant name="EASE_IN_OUT" value="2" enum="EaseType">
		</constant>
		<constant name="EASE_OUT_IN" value="3" enum="EaseType">
		</constant>
	</constants>
</class>
