<?xml version="1.0" encoding="UTF-8" ?>
<class name="PackedByteArray" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<constructors>
		<constructor name="PackedByteArray">
			<return type="PackedByteArray" />
			<description>
			</description>
		</constructor>
		<constructor name="PackedByteArray">
			<return type="PackedByteArray" />
			<param index="0" name="from" type="PackedByteArray" />
			<description>
			</description>
		</constructor>
		<constructor name="PackedByteArray">
			<return type="PackedByteArray" />
			<param index="0" name="from" type="Array" />
			<description>
			</description>
		</constructor>
	</constructors>
	<methods>
		<method name="append">
			<return type="bool" />
			<param index="0" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="append_array">
			<return type="void" />
			<param index="0" name="array" type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="bsearch">
			<return type="int" />
			<param index="0" name="value" type="int" />
			<param index="1" name="before" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="clear">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="compress" qualifiers="const">
			<return type="PackedByteArray" />
			<param index="0" name="compression_mode" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="count" qualifiers="const">
			<return type="int" />
			<param index="0" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_double" qualifiers="const">
			<return type="float" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_float" qualifiers="const">
			<return type="float" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_half" qualifiers="const">
			<return type="float" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_s16" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_s32" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_s64" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_s8" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_u16" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_u32" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_u64" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_u8" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<description>
			</description>
		</method>
		<method name="decode_var" qualifiers="const">
			<return type="Variant" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="allow_objects" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="decode_var_size" qualifiers="const">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="allow_objects" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="decompress" qualifiers="const">
			<return type="PackedByteArray" />
			<param index="0" name="buffer_size" type="int" />
			<param index="1" name="compression_mode" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="decompress_dynamic" qualifiers="const">
			<return type="PackedByteArray" />
			<param index="0" name="max_output_size" type="int" />
			<param index="1" name="compression_mode" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="duplicate">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="encode_double">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="float" />
			<description>
			</description>
		</method>
		<method name="encode_float">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="float" />
			<description>
			</description>
		</method>
		<method name="encode_half">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="float" />
			<description>
			</description>
		</method>
		<method name="encode_s16">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_s32">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_s64">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_s8">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_u16">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_u32">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_u64">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_u8">
			<return type="void" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="encode_var">
			<return type="int" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="value" type="Variant" />
			<param index="2" name="allow_objects" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="fill">
			<return type="void" />
			<param index="0" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="find" qualifiers="const">
			<return type="int" />
			<param index="0" name="value" type="int" />
			<param index="1" name="from" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="get_string_from_ascii" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_string_from_utf16" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_string_from_utf32" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_string_from_utf8" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="has" qualifiers="const">
			<return type="bool" />
			<param index="0" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="has_encoded_var" qualifiers="const">
			<return type="bool" />
			<param index="0" name="byte_offset" type="int" />
			<param index="1" name="allow_objects" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="hex_encode" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="insert">
			<return type="int" />
			<param index="0" name="at_index" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="is_empty" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="push_back">
			<return type="bool" />
			<param index="0" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="remove_at">
			<return type="void" />
			<param index="0" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="resize">
			<return type="int" />
			<param index="0" name="new_size" type="int" />
			<description>
			</description>
		</method>
		<method name="reverse">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="rfind" qualifiers="const">
			<return type="int" />
			<param index="0" name="value" type="int" />
			<param index="1" name="from" type="int" default="-1" />
			<description>
			</description>
		</method>
		<method name="set">
			<return type="void" />
			<param index="0" name="index" type="int" />
			<param index="1" name="value" type="int" />
			<description>
			</description>
		</method>
		<method name="size" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="slice" qualifiers="const">
			<return type="PackedByteArray" />
			<param index="0" name="begin" type="int" />
			<param index="1" name="end" type="int" default="2147483647" />
			<description>
			</description>
		</method>
		<method name="sort">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="to_float32_array" qualifiers="const">
			<return type="PackedFloat32Array" />
			<description>
			</description>
		</method>
		<method name="to_float64_array" qualifiers="const">
			<return type="PackedFloat64Array" />
			<description>
			</description>
		</method>
		<method name="to_int32_array" qualifiers="const">
			<return type="PackedInt32Array" />
			<description>
			</description>
		</method>
		<method name="to_int64_array" qualifiers="const">
			<return type="PackedInt64Array" />
			<description>
			</description>
		</method>
	</methods>
	<operators>
		<operator name="operator !=">
			<return type="bool" />
			<param index="0" name="right" type="PackedByteArray" />
			<description>
			</description>
		</operator>
		<operator name="operator +">
			<return type="PackedByteArray" />
			<param index="0" name="right" type="PackedByteArray" />
			<description>
			</description>
		</operator>
		<operator name="operator ==">
			<return type="bool" />
			<param index="0" name="right" type="PackedByteArray" />
			<description>
			</description>
		</operator>
		<operator name="operator []">
			<return type="int" />
			<param index="0" name="index" type="int" />
			<description>
			</description>
		</operator>
	</operators>
</class>
