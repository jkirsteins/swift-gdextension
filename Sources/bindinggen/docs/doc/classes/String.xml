<?xml version="1.0" encoding="UTF-8" ?>
<class name="String" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<constructors>
		<constructor name="String">
			<return type="String" />
			<description>
			</description>
		</constructor>
		<constructor name="String">
			<return type="String" />
			<param index="0" name="from" type="String" />
			<description>
			</description>
		</constructor>
		<constructor name="String">
			<return type="String" />
			<param index="0" name="from" type="NodePath" />
			<description>
			</description>
		</constructor>
		<constructor name="String">
			<return type="String" />
			<param index="0" name="from" type="StringName" />
			<description>
			</description>
		</constructor>
	</constructors>
	<methods>
		<method name="begins_with" qualifiers="const">
			<return type="bool" />
			<param index="0" name="text" type="String" />
			<description>
			</description>
		</method>
		<method name="bigrams" qualifiers="const">
			<return type="PackedStringArray" />
			<description>
			</description>
		</method>
		<method name="bin_to_int" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="c_escape" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="c_unescape" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="capitalize" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="casecmp_to" qualifiers="const">
			<return type="int" />
			<param index="0" name="to" type="String" />
			<description>
			</description>
		</method>
		<method name="chr" qualifiers="static">
			<return type="String" />
			<param index="0" name="char" type="int" />
			<description>
			</description>
		</method>
		<method name="contains" qualifiers="const">
			<return type="bool" />
			<param index="0" name="what" type="String" />
			<description>
			</description>
		</method>
		<method name="count" qualifiers="const">
			<return type="int" />
			<param index="0" name="what" type="String" />
			<param index="1" name="from" type="int" default="0" />
			<param index="2" name="to" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="countn" qualifiers="const">
			<return type="int" />
			<param index="0" name="what" type="String" />
			<param index="1" name="from" type="int" default="0" />
			<param index="2" name="to" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="dedent" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="ends_with" qualifiers="const">
			<return type="bool" />
			<param index="0" name="text" type="String" />
			<description>
			</description>
		</method>
		<method name="find" qualifiers="const">
			<return type="int" />
			<param index="0" name="what" type="String" />
			<param index="1" name="from" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="findn" qualifiers="const">
			<return type="int" />
			<param index="0" name="what" type="String" />
			<param index="1" name="from" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="format" qualifiers="const">
			<return type="String" />
			<param index="0" name="values" type="Variant" />
			<param index="1" name="placeholder" type="String" default="&quot;{_}&quot;" />
			<description>
			</description>
		</method>
		<method name="get_base_dir" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_basename" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_extension" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_file" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="get_slice" qualifiers="const">
			<return type="String" />
			<param index="0" name="delimiter" type="String" />
			<param index="1" name="slice" type="int" />
			<description>
			</description>
		</method>
		<method name="get_slice_count" qualifiers="const">
			<return type="int" />
			<param index="0" name="delimiter" type="String" />
			<description>
			</description>
		</method>
		<method name="get_slicec" qualifiers="const">
			<return type="String" />
			<param index="0" name="delimiter" type="int" />
			<param index="1" name="slice" type="int" />
			<description>
			</description>
		</method>
		<method name="hash" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="hex_to_int" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="humanize_size" qualifiers="static">
			<return type="String" />
			<param index="0" name="size" type="int" />
			<description>
			</description>
		</method>
		<method name="indent" qualifiers="const">
			<return type="String" />
			<param index="0" name="prefix" type="String" />
			<description>
			</description>
		</method>
		<method name="insert" qualifiers="const">
			<return type="String" />
			<param index="0" name="position" type="int" />
			<param index="1" name="what" type="String" />
			<description>
			</description>
		</method>
		<method name="is_absolute_path" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_empty" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_relative_path" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_subsequence_of" qualifiers="const">
			<return type="bool" />
			<param index="0" name="text" type="String" />
			<description>
			</description>
		</method>
		<method name="is_subsequence_ofn" qualifiers="const">
			<return type="bool" />
			<param index="0" name="text" type="String" />
			<description>
			</description>
		</method>
		<method name="is_valid_filename" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_valid_float" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_valid_hex_number" qualifiers="const">
			<return type="bool" />
			<param index="0" name="with_prefix" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="is_valid_html_color" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_valid_identifier" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_valid_int" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="is_valid_ip_address" qualifiers="const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="join" qualifiers="const">
			<return type="String" />
			<param index="0" name="parts" type="PackedStringArray" />
			<description>
			</description>
		</method>
		<method name="json_escape" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="left" qualifiers="const">
			<return type="String" />
			<param index="0" name="length" type="int" />
			<description>
			</description>
		</method>
		<method name="length" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="lpad" qualifiers="const">
			<return type="String" />
			<param index="0" name="min_length" type="int" />
			<param index="1" name="character" type="String" default="&quot; &quot;" />
			<description>
			</description>
		</method>
		<method name="lstrip" qualifiers="const">
			<return type="String" />
			<param index="0" name="chars" type="String" />
			<description>
			</description>
		</method>
		<method name="match" qualifiers="const">
			<return type="bool" />
			<param index="0" name="expr" type="String" />
			<description>
			</description>
		</method>
		<method name="matchn" qualifiers="const">
			<return type="bool" />
			<param index="0" name="expr" type="String" />
			<description>
			</description>
		</method>
		<method name="md5_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="md5_text" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="naturalnocasecmp_to" qualifiers="const">
			<return type="int" />
			<param index="0" name="to" type="String" />
			<description>
			</description>
		</method>
		<method name="nocasecmp_to" qualifiers="const">
			<return type="int" />
			<param index="0" name="to" type="String" />
			<description>
			</description>
		</method>
		<method name="num" qualifiers="static">
			<return type="String" />
			<param index="0" name="number" type="float" />
			<param index="1" name="decimals" type="int" default="-1" />
			<description>
			</description>
		</method>
		<method name="num_int64" qualifiers="static">
			<return type="String" />
			<param index="0" name="number" type="int" />
			<param index="1" name="base" type="int" default="10" />
			<param index="2" name="capitalize_hex" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="num_scientific" qualifiers="static">
			<return type="String" />
			<param index="0" name="number" type="float" />
			<description>
			</description>
		</method>
		<method name="num_uint64" qualifiers="static">
			<return type="String" />
			<param index="0" name="number" type="int" />
			<param index="1" name="base" type="int" default="10" />
			<param index="2" name="capitalize_hex" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="pad_decimals" qualifiers="const">
			<return type="String" />
			<param index="0" name="digits" type="int" />
			<description>
			</description>
		</method>
		<method name="pad_zeros" qualifiers="const">
			<return type="String" />
			<param index="0" name="digits" type="int" />
			<description>
			</description>
		</method>
		<method name="path_join" qualifiers="const">
			<return type="String" />
			<param index="0" name="file" type="String" />
			<description>
			</description>
		</method>
		<method name="repeat" qualifiers="const">
			<return type="String" />
			<param index="0" name="count" type="int" />
			<description>
			</description>
		</method>
		<method name="replace" qualifiers="const">
			<return type="String" />
			<param index="0" name="what" type="String" />
			<param index="1" name="forwhat" type="String" />
			<description>
			</description>
		</method>
		<method name="replacen" qualifiers="const">
			<return type="String" />
			<param index="0" name="what" type="String" />
			<param index="1" name="forwhat" type="String" />
			<description>
			</description>
		</method>
		<method name="rfind" qualifiers="const">
			<return type="int" />
			<param index="0" name="what" type="String" />
			<param index="1" name="from" type="int" default="-1" />
			<description>
			</description>
		</method>
		<method name="rfindn" qualifiers="const">
			<return type="int" />
			<param index="0" name="what" type="String" />
			<param index="1" name="from" type="int" default="-1" />
			<description>
			</description>
		</method>
		<method name="right" qualifiers="const">
			<return type="String" />
			<param index="0" name="length" type="int" />
			<description>
			</description>
		</method>
		<method name="rpad" qualifiers="const">
			<return type="String" />
			<param index="0" name="min_length" type="int" />
			<param index="1" name="character" type="String" default="&quot; &quot;" />
			<description>
			</description>
		</method>
		<method name="rsplit" qualifiers="const">
			<return type="PackedStringArray" />
			<param index="0" name="delimiter" type="String" default="&quot;&quot;" />
			<param index="1" name="allow_empty" type="bool" default="true" />
			<param index="2" name="maxsplit" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="rstrip" qualifiers="const">
			<return type="String" />
			<param index="0" name="chars" type="String" />
			<description>
			</description>
		</method>
		<method name="sha1_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="sha1_text" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="sha256_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="sha256_text" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="similarity" qualifiers="const">
			<return type="float" />
			<param index="0" name="text" type="String" />
			<description>
			</description>
		</method>
		<method name="simplify_path" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="split" qualifiers="const">
			<return type="PackedStringArray" />
			<param index="0" name="delimiter" type="String" default="&quot;&quot;" />
			<param index="1" name="allow_empty" type="bool" default="true" />
			<param index="2" name="maxsplit" type="int" default="0" />
			<description>
			</description>
		</method>
		<method name="split_floats" qualifiers="const">
			<return type="PackedFloat64Array" />
			<param index="0" name="delimiter" type="String" />
			<param index="1" name="allow_empty" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="strip_edges" qualifiers="const">
			<return type="String" />
			<param index="0" name="left" type="bool" default="true" />
			<param index="1" name="right" type="bool" default="true" />
			<description>
			</description>
		</method>
		<method name="strip_escapes" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="substr" qualifiers="const">
			<return type="String" />
			<param index="0" name="from" type="int" />
			<param index="1" name="len" type="int" default="-1" />
			<description>
			</description>
		</method>
		<method name="to_ascii_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="to_camel_case" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="to_float" qualifiers="const">
			<return type="float" />
			<description>
			</description>
		</method>
		<method name="to_int" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="to_lower" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="to_pascal_case" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="to_snake_case" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="to_upper" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="to_utf16_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="to_utf32_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="to_utf8_buffer" qualifiers="const">
			<return type="PackedByteArray" />
			<description>
			</description>
		</method>
		<method name="trim_prefix" qualifiers="const">
			<return type="String" />
			<param index="0" name="prefix" type="String" />
			<description>
			</description>
		</method>
		<method name="trim_suffix" qualifiers="const">
			<return type="String" />
			<param index="0" name="suffix" type="String" />
			<description>
			</description>
		</method>
		<method name="unicode_at" qualifiers="const">
			<return type="int" />
			<param index="0" name="at" type="int" />
			<description>
			</description>
		</method>
		<method name="uri_decode" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="uri_encode" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="validate_filename" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="validate_node_name" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="xml_escape" qualifiers="const">
			<return type="String" />
			<param index="0" name="escape_quotes" type="bool" default="false" />
			<description>
			</description>
		</method>
		<method name="xml_unescape" qualifiers="const">
			<return type="String" />
			<description>
			</description>
		</method>
	</methods>
	<operators>
		<operator name="operator !=">
			<return type="bool" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator !=">
			<return type="bool" />
			<param index="0" name="right" type="StringName" />
			<description>
			</description>
		</operator>
		<operator name="operator %">
			<return type="String" />
			<param index="0" name="right" type="Variant" />
			<description>
			</description>
		</operator>
		<operator name="operator +">
			<return type="String" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator +">
			<return type="String" />
			<param index="0" name="right" type="StringName" />
			<description>
			</description>
		</operator>
		<operator name="operator &lt;">
			<return type="bool" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator &lt;=">
			<return type="bool" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator ==">
			<return type="bool" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator ==">
			<return type="bool" />
			<param index="0" name="right" type="StringName" />
			<description>
			</description>
		</operator>
		<operator name="operator &gt;">
			<return type="bool" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator &gt;=">
			<return type="bool" />
			<param index="0" name="right" type="String" />
			<description>
			</description>
		</operator>
		<operator name="operator []">
			<return type="String" />
			<param index="0" name="index" type="int" />
			<description>
			</description>
		</operator>
	</operators>
</class>
