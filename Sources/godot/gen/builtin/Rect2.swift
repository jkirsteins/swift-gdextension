/// autogenerated

import godot_native

fileprivate var __godot_name_Rect2: StringName! = nil

/// 2D axis-aligned bounding box using floating point coordinates.
/// 
/// [Rect2] consists of a position, a size, and several utility functions. It is typically used for fast overlap tests.
///  
/// It uses floating-point coordinates. If you need integer coordinates, use [Rect2i] instead.
///  
/// The 3D counterpart to [Rect2] is [AABB].
///  
/// Negative values for [member size] are not supported and will not work for most methods. Use [method abs] to get a Rect2 with a positive size.
public class Rect2 : BuiltinClass {

    public static var interface: UnsafePointer<GDExtensionInterface>! = nil
    public static var library: GDExtensionClassLibraryPtr! = nil
    
    var interface: UnsafePointer<GDExtensionInterface> { Self.interface }

    

    public class var __godot_name: StringName { __godot_name_Rect2 }

    public static let SIZE = 32;

    public let opaque: UnsafeMutableRawPointer
    
    static var _constructor_0: GDExtensionPtrConstructor? = nil
    static var _constructor_1: GDExtensionPtrConstructor? = nil
    static var _constructor_2: GDExtensionPtrConstructor? = nil
    static var _constructor_3: GDExtensionPtrConstructor? = nil
    static var _constructor_4: GDExtensionPtrConstructor? = nil
    static var _destructor: GDExtensionPtrDestructor? = nil

    public class func initialize_class(_ ginit: GodotInitializer, _: GDExtensionInitializationLevel) {
        Self.interface = ginit.p_interface
        Self.library = ginit.p_library

        // Init constructors before assigning __godot_name
        Rect2._constructor_0 =  Rect2.interface.pointee.variant_get_ptr_constructor(GDEXTENSION_VARIANT_TYPE_RECT2, 0)
        assert(Rect2._constructor_0 != nil)
        Rect2._constructor_1 =  Rect2.interface.pointee.variant_get_ptr_constructor(GDEXTENSION_VARIANT_TYPE_RECT2, 1)
        assert(Rect2._constructor_1 != nil)
        Rect2._constructor_2 =  Rect2.interface.pointee.variant_get_ptr_constructor(GDEXTENSION_VARIANT_TYPE_RECT2, 2)
        assert(Rect2._constructor_2 != nil)
        Rect2._constructor_3 =  Rect2.interface.pointee.variant_get_ptr_constructor(GDEXTENSION_VARIANT_TYPE_RECT2, 3)
        assert(Rect2._constructor_3 != nil)
        Rect2._constructor_4 =  Rect2.interface.pointee.variant_get_ptr_constructor(GDEXTENSION_VARIANT_TYPE_RECT2, 4)
        assert(Rect2._constructor_4 != nil)
    }

    public class func initialize_godot_name() {
        // At this point constructors for String and StringName
        // must be assigned
        __godot_name_Rect2 = StringName(from: "Rect2")
    }

    /// Constructs a default-initialized [Rect2] with default (zero) values of [member position] and [member size].
    public init() {
        self.opaque = .allocate(byteCount: 32, alignment: 4)
        let args: UnsafeMutableBufferPointer<GDExtensionConstTypePtr?> = .allocate(capacity: 0)
            defer { args.deallocate() }
            _ = args.initialize(from: [
                
            ])
            // call here
            Self._constructor_0!(self._native_ptr(), .init(args.baseAddress!))
    }
    /// Constructs a [Rect2] as a copy of the given [Rect2].
    public init(from: Rect2) {
        self.opaque = .allocate(byteCount: 32, alignment: 4)
        let from_native = from._native_ptr()
        let args: UnsafeMutableBufferPointer<GDExtensionConstTypePtr?> = .allocate(capacity: 1)
            defer { args.deallocate() }
            _ = args.initialize(from: [
                .init(from_native)
            ])
            // call here
            Self._constructor_1!(self._native_ptr(), .init(args.baseAddress!))
    }
    /// Constructs a [Rect2] from a [Rect2i].
    public init(from: Rect2i) {
        self.opaque = .allocate(byteCount: 32, alignment: 4)
        let from_native = from._native_ptr()
        let args: UnsafeMutableBufferPointer<GDExtensionConstTypePtr?> = .allocate(capacity: 1)
            defer { args.deallocate() }
            _ = args.initialize(from: [
                .init(from_native)
            ])
            // call here
            Self._constructor_2!(self._native_ptr(), .init(args.baseAddress!))
    }
    /// Constructs a [Rect2] by position and size.
    public init(position: Vector2, size: Vector2) {
        self.opaque = .allocate(byteCount: 32, alignment: 4)
        let size_native = size._native_ptr()
        let position_native = position._native_ptr()
        let args: UnsafeMutableBufferPointer<GDExtensionConstTypePtr?> = .allocate(capacity: 2)
            defer { args.deallocate() }
            _ = args.initialize(from: [
                .init(position_native), .init(size_native)
            ])
            // call here
            Self._constructor_3!(self._native_ptr(), .init(args.baseAddress!))
    }
    /// Constructs a [Rect2] by x, y, width, and height.
    public init(x: Float64, y: Float64, width: Float64, height: Float64) {
        self.opaque = .allocate(byteCount: 32, alignment: 4)
        withUnsafePointer(to: height) { height_native in
        withUnsafePointer(to: width) { width_native in
        withUnsafePointer(to: y) { y_native in
        withUnsafePointer(to: x) { x_native in
        let args: UnsafeMutableBufferPointer<GDExtensionConstTypePtr?> = .allocate(capacity: 4)
            defer { args.deallocate() }
            _ = args.initialize(from: [
                .init(x_native), .init(y_native), .init(width_native), .init(height_native)
            ])
            // call here
            Self._constructor_4!(self._native_ptr(), .init(args.baseAddress!))
        }
        }
        }
        }
    }
    public required init(godot unsafe: UnsafeRawPointer) {
        self.opaque = .init(mutating: unsafe)
    }
    public required init(godot unsafe: UnsafeMutableRawPointer) {
        self.opaque = unsafe
    }

    deinit {
        Self._destructor?(self._native_ptr())
        opaque.deallocate()
    }
}